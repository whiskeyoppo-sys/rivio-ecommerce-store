# Fully conceptualized - Local development environment
# Design choice: Complete dev stack with all services

version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: rivio-postgres
    environment:
      POSTGRES_USER: rivio
      POSTGRES_PASSWORD: rivio_password
      POSTGRES_DB: rivio_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rivio']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rivio-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../../backend
      dockerfile: ../infra/docker/Dockerfile.backend
    container_name: rivio-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://rivio:rivio_password@postgres:5432/rivio_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-change-in-production
      NODE_ENV: development
    ports:
      - '3001:3001'
    volumes:
      - ../../backend:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infra/docker/Dockerfile.frontend
    container_name: rivio-frontend
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3001
      NODE_ENV: development
    ports:
      - '3000:3000'
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
